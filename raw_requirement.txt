AgentPut项目是一个开源的no-code的MAS平台，旨在让非技术用户可以通过简单有趣的界面编排属于自己的MAS

技术实现方面，这是一个前后端分离的项目，
后台是python,fastapi项目，前端使用react架构

整体是一个fastapi项目

后端代码路由到/api

前端代码通过编译打包成挂载到fastapi路由的跟路径（root）上，并通过调用
/api(后端的接口）来实现功能


采用Autogen对MAS系统的定义，
https://microsoft.github.io/autogen/stable//user-guide/agentchat-user-guide/index.html
https://microsoft.github.io/autogen/stable//reference/index.html

对Agent,Team建模
agent都是autogen的AssistantAgent
team默认都采用 autogen_agentchat.teams import Swarm
所以agent有字段
name,handoffs(list of str),tools和system_message
因为team都是swarm，所以agent都要有handoffs字段

Swarm的终止条件是默认的

tools支持配置一个mcps.json的多个mcp服务器
系统初始化的时候，会根据这个文件来链接固定的mcp服务器，tools就是要支持这些mcp工具
统一使用StreamableHttp


你需要一个简单的用户表，有name就可以
有一个conversation模型，记录用户的运行某个MAS(也就是team）的整个对话
后台team的运行逻辑是这样的，用户以一个task（请为我写一篇关于人工智能的文章）来触发team,然后这个team会离线运行
这个team运行过程中，会产生很多event
TextMessage,ToolCallRequestEvent,ToolCallExecutionEvent,ToolCallSummaryMessage,
AgentMessageChunk（用于流式输出）,HandoffMessage,
所有这些你都要记录下来，用户回放整个对话（用户可能随时中断，刷新页面），一个现在的MAS对话系统应该能做到重放

设计适当的后端接口来呈现这个过程，设计前端页面来展示team整个运行的流程
设计一个简单的用户管理界面，和team和agent的编辑界面
